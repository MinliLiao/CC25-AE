# ************ Optimization flags ************
export CCBASE=$(LLVMDIR)/bin/clang
export CXXBASE=$(LLVMDIR)/bin/clang++
export OPT=$(LLVMDIR)/bin/opt
export LINK=$(LLVMDIR)/bin/llvm-link
export LLC=$(LLVMDIR)/bin/llc
export CCFINISH=$(LLVMDIR)/bin/clang
export CXXFINISH=$(LLVMDIR)/bin/clang++

######
FLAGS = -O3 -march=aarch64
CFLAGS = ${EXTRACFLAGS} -O3 -static -Wall -S -emit-llvm -Wno-int-conversion
INCLUDES = -I./ -I/usr/include/aarch64-linux-gnu/
LFLAGS = -O3 -static

# TODO: Change .c to .cpp for C++ sources
SOURCES := example.c adler32.c compress.c crc32.c gzio.c uncompr.c deflate.c trees.c zutil.c inflate.c infback.c inftrees.c inffast.c minigzip.c

LLVMIR  := $(patsubst %.c,$(BINDIR)/%.ll,$(SOURCES)) 
NORMIR  := $(patsubst %.c,$(BINDIR)/%.norm.ll,$(SOURCES))
PARIR   := $(patsubst %.c,$(BINDIR)/%.par.ll,$(SOURCES))
OBJ     := $(patsubst %.c,$(BINDIR)/%.o,$(SOURCES))
ASM     := $(patsubst %.c,$(BINDIR)/%.s,$(SOURCES))
FIXASM  := $(patsubst %.c,$(BINDIR)/%.fix.s,$(SOURCES))

.PHONY: all check norm nzdc
all: norm nzdc
norm: FLAGS = -O3 -march=aarch64
nzdc: FLAGS = -O3 -march=aarch64 -reserveRegs=true -enable-nZDC=true
norm: FIX = cat
nzdc: FIX = python ${BINDIR}/../../../FixAssembly.py --inFilename
norm: check ${BINDIR}/libz.a
nzdc: check ${BINDIR}/libz.a
check:
	mkdir -p ${BINDIR}
	@[ "${LLVMDIR}" ] || { echo "Error: LLVMDIR is not set"; exit 1; }

${BINDIR}/example: example.o ${BINDIR}/libz.a
	$(CCFINISH) -O3 -o $@ $^
${BINDIR}/minigzip: minigzip.o ${BINDIR}/libz.a
	$(CCFINISH) -O3 -o $@ $^
${BINDIR}/libz.a: $(filter-out example.o minigzip.o, $(OBJ))
	/usr/bin/ar rc ${BINDIR}/libz.a $^
${BINDIR}/%.o: ${BINDIR}/%.fix.s
	$(CCFINISH) -c $< -o $@
${BINDIR}/%.fix.s: ${BINDIR}/%.s
	$(FIX) $< > $@
${BINDIR}/%.s: ${BINDIR}/%.ll
	$(LLC) $(FLAGS) $< -o $@
${BINDIR}/%.ll: %.c
	$(CCBASE) $(CFLAGS) $(INCLUDES) $< -o $@
${BINDIR}/%.ll: %.cpp
	$(CXXBASE) $(CFLAGS) $(INCLUDES) $< -o $@

.PHONY: clean
clean:
	rm -f ${BINDIR}/libz.a ${BINDIR}/minigzip ${BINDIR}/example ${BINDIR}/${BENCHNAME}.par.ll ${BINDIR}/${BENCHNAME}.norm.ll ${BINDIR}/${BENCHNAME}.par.s ${BINDIR}/${BENCHNAME}.par_fix.s ${BINDIR}/${BENCHNAME}.par.o $(LLVMIR) $(NORMIR) $(PARIR) $(OBJ) $(FIXASM) $(ASM)

